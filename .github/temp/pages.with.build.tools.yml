name: Deploy to GitHub Pages

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Prepare build folder
        run: |
          rm -rf build
          mkdir -p build
          cp -r src/* build/

      - name: Inject SHA and asset list into service worker
        run: |
          SHA=$(git rev-parse --short HEAD)
          echo "SHA: $SHA"

          echo "Generating asset list..."
          find build -type f ! -name service-worker.js \
            | sed 's|^build||; s| |%20|g' \
            | jq -R . | jq -s . > asset-list.json

          echo "Generated asset list:"
          cat asset-list.json

          echo "Injecting SHA into template..."
          sed "s|__BUILD_SHA__|$SHA|g" src/service-worker.js > build/service-worker.tmp.js

          echo "Injecting asset list..."
          SERVICE_WORKER_CONTENT=$(cat build/service-worker.tmp.js)
          ASSET_LIST_JSON=$(cat asset-list.json)
          echo "${SERVICE_WORKER_CONTENT/__ASSETS__/${ASSET_LIST_JSON}}" > build/service-worker.js

      - name: Install build tools
        run: |
          npm install -g esbuild postcss postcss-cli autoprefixer cssnano postcss-preset-env

      - name: Minify JS files
        run: |
          find build -type f -name '*.js' ! -name 'service-worker.js' -exec esbuild {} --minify --outfile={} \;

      - name: Process CSS with PostCSS
        run: |
          find build -type f -name '*.css' -exec postcss {} --replace \;


      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
